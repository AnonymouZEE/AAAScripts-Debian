###############################################################
#
# A A A
#
#


echo AAA *sh/Library
echo AAA/ZEE/2023
echo
# define functions/methods/... and continue at bottom


aaa-!(){
	echo Scripts#
	echo ----------------------------------------
	ls -la $aaa_scripts/$1*
	echo
	echo Scripts#
	echo ----------------------------------------
	ls -la $aaa_scriptsX/$1*
	echo
	}



#
#
# 2DO***
aaa-al() { aaa-all $@; return $?; }
aaa-all(){
	echo 2DO*** 
	echo show all alias/functions/scripts/...
	echo show all variables/configs/...
	
	return $?;
	}




# LIST AVAILABLE SCRIPS/METHODS/ACTIONS/ALIAS/...
# for the argumented class
#
aaa-code(){
	# if no argument then exit error 1
	if [ -z $1 ]; then
		echo Syntax: aaa-code ?class
		return 1
		fi

	# AAA
	echo -e -n '\033[1;32m'
	echo -e AAA
	echo -e -n '\033[0;33m'
	echo "* aaa-class <method> <args...>  -to-  invoke class/method"
	echo "* <class>-help                  -is-  static edited help text"
	echo "* <oo> <mm> <args...>           -as-  quick short form..." 
	echo


	# ALIAS
	echo -e -n '\033[1;32m'
	echo -e Alias
	echo -e -----
	echo -e -n '\033[0;37m'
	echo ATT*** bash do not propagate ALIAS to non-interactive shells...
	compgen -A alias
	echo

	# FUNCTIONS/help
	echo -e -n '\033[1;32m'
	echo -e Functions
	echo -e ---------
	echo -e -n '\033[0;37m'
	#invoke *-class help
	#$1class help
	compgen -A function | grep -i $1
	echo

	# SCRIPTS
	echo -e -n '\033[1;32m'
	echo -e Scripts
	echo -e -------
	echo -e -n '\033[0;37m'
	ls -la $AAAScripts/$1*
	}


# DATES
#
# 
aaa-date(){ 
	date
	date +%Y%m%d-%H%M%S
	date +%W

	}



# EDIT
#
# 
aaa-edit(){
	local x=

	# DIALOG-OPTIONS
	echo \(1\)	autoexec
	echo \(2\)	aaa-
	echo \(3\)	aaa-class
	echo \(0\)	\<exit\>
	echo

	while [[ ! "1230" =~ $x ]]; do
		read -p "?" -t 10 -n 1 -i 1 x
		done;

	case ${x}
	in
		1) nano $AAAScripts/autoexec;;
		2) nano $AAAScripts/aaa-;;
		3) nano $AAAScripts/aaa-class;;
		4) echo;;
	esac

	}




# help/functions
#
# REFACTOR***
aaa-hh(){ aaa-help $@; return $?; }
aaa-help(){
	echo -e -n '\033[1;36m'
cat<<EOF
aaa-!         !
aaa-000       --
aaa-all       al
aaa-edit      ed  edit system files
aaa-help      hh  this...
aaa-list      ls  Show related actions in Alias/Functions/Scripts
aaa-log       --  show logo/banner
aaa-me        me  try to show ???AAAScriptsX/me-aaa
aaa-message   ms  show message
aaa-parse     --
aaa-scripts   sc
aaa-scriptsX  sx
aaa-state     st  State...
aaa-status    ss  Status...
aaa-xxx       xx
EOF
	echo -e -n '\033[0;37m'
	}



# LOGO
#
# REFACTOR*** stty/size full-line
aaa-log(){
	echo '/////////////////////////////////////////\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'
	echo '                                       /  \                                    '
	echo '                                      / /\ \                                   '
	echo '                                     / /  \ \                                  '
	echo '                                     \/____\/                                  '
	echo '                                      \    /                         ZEE/2020  '
	echo '                                       \  /                                    '
	echo '\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\//////////////////////////////////////'
	
	# 2DO***
	# if $aaa_log then log to $aaa_log...
	# if arguments print them line-by-line...
	}




#
#
# ?REPLACE aaa-scripts??
aaa-ls(){ aaa-list $@; return $?; }
aaa-list(){
	aaa-code aaa-;
	return $?;
	}



# if exist a file $AAAScriptsX/me-$1 then show it
# if $1 is null assume "aaa"
#
aaa-me() {
	local x=${1:-"aaa"}
	# if [ -f $AAAScriptsX/me-$x ]; then cat $AAAScriptsX/me-$x; fi;
	cat $AAAScriptsX/me-$x;
	return $?;
	}



# Message
#
# REFACTOR*** 
aaa-ms(){ aaa-message $@; return $?; }
aaa-message(){
	echo -e $*;
	return $?;
	}


# used in <class>- scripts
# like aaa-* -or- service-*
#
# $1 is the invoker class id
# $2 if not present list the actions/methods/scripts
# $2 if present call the action of the originator class (can be abbreviation as docker/dk)
# 3..* arguments to pass allong...
#
# ATT*** 
#	avoid ALIAS because they are not expanded to non-interactive shells
#
# SAMPLES***
#	aaa-parse /DAT/#scripts/aaa-
#

aaa-parse(){
	# if no arguments... no need to parse...
	if [ -z $1 ]; then 
		echo aaa-parse/function... no arguments... 
		return 255; 
		fi;

	# get class name from $0 path...
	local x=${0##*/}; x=${x%.*};
	
	# if action/method has no arguments then show scripts/functions/alias
	# get script name from path and strip-off extension
	# use $1 to get action...
	if [ -z $2 ]; then aaa-code $x; return 0; fi;
	
	# if action/method is argumented
	local xx=$x$2

	# consume/drop
	# drop $1/file-or-alias and $2/action-or-method
	shift
	shift

	# FUNCTION
	# "" to prevent null type
	if [ "$(type -t $xx )" == "function" ]; then
		$xx $*;
		return $?;	
		fi;
		
	# SCRIPT
	# REFACTOR*** agnosticize <extension> (.sh .py ...)
	# resolve to it... and return
	if [ -x $AAAScripts/$xx ]; then
		$xx $*;
		return $?;
		fi;


	# REFACTOR*** for aaa-message
	aaa-message "" "\n\t" "ERROR***" "\n\t" "no script or alias..." "\n\t" $xx

	return 255;
	}



#
#
#
aaa-st() { aaa-state $@; return $?; }
aaa-state() { 
	# could consume $1 to $x and shift 
	# if futher arguments were significant...
	echo ----------------------------------------[ PATH ]
	echo $PATH
	echo
	echo ----------------------------------------[ AAA* ]
	echo $AAALinks   \| $AAALinksX
	echo $AAAScripts \| $AAAScriptsX
	echo
	return $?;
	}



#
#
#
aaa-ss() { aaa-status $@; return $?; }
aaa-status() { 
	# 2DO***
	# show resume of cpu/mem/disk os/user/processes/...
	source /DAT/#scripts/service-class
	service-status $@;
	return $?;
	}




#
#
# ?rename to aaa-info? aaa-test?? aaa-? ???
aaa-xx() { aaa-xxx $@; return $?; }
aaa-xxx() {
	# get calling scripts name...
	# can be called from any script
	local x=${0##*/}; x=${x%.*}; x=$x$2;
	
	echo
	echo AAA-Analysis \($x/$( type -t $x )\)
	echo
	echo \$\0  -is-  $0
	echo \$\@  -is-  $@
	echo \$\*  -is-  $*
	echo
	echo "$@"   -from-  \"\$\@\"
	echo "$*"   -from-  \"\$\*\"
	echo

	echo [ basename/dirname ]
	basename $0
	# basename $0 .sh
	dirname $0
	echo
	
	echo [ POSIX leaf/no-extension ]
	# POSIX string manipulations
	echo ${0##*/}
	echo ${0%.*}
	
	return $?;
	}


# fallback to call class methods
# without pass through aaa-parse
# do not uncomment in aaa- 
# because the source(ing) in other classes cause odd behaviour
# if [ ! -z $1 ]; then service-$@; fi;


