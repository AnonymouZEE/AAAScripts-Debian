###############################################################
#
#  D O C K E R
#
#


# PROPERTIES
# ATT*** '-' not permite in identifiers...
docker_container="";
docker_image="";

#
#
#
docker-!(){
	echo Scripts#
	echo ----------------------------------------
	ls -la $aaa_scripts/$1*
	echo
	echo Scripts#
	echo ----------------------------------------
	ls -la $aaa_scriptsX/$1*
	echo
	}



#docker
#
#
docker-bl() { docker build $@; return $?; }
docker-build() {
	docker build $@;
	return $?;
	}



#docker
#
#
docker-ct() { docker-container $@; return $?; }
docker-container() {
	echo 2DO*** show container info
	# docker-process $@;
	return $?;
	}



# docker/CONTAINERS
#
#
docker-cs() { docker-containers $@; return $?; }
docker-containers() {
	echo
	echo CONTAINERS
	echo ----------------------------------------
	docker-process $@;
	return $?;
	}



# docker/DIFFERENCES
#
#
docker-df() { docker-difference $@; return $?; }
docker-difference() {
	# ?ALERT if container not exit
	echo DIFFERENCES:
	echo
	docker diff $@;
	return $?;
	}



# docker/DIFFERENCES
#
#
docker-ex() { docker-execute $@; return $?; }
docker-execute() {

	if [ -z $1 ]; then
		echo -e -n '\033[0;32m'

cat<<EOF
* run a program inside a hot container...
* if arguments will execute and pass them to action...

	docker exec ~container ~program
	
	docker exec -it ~container /bin/sh
	docker exec -it ~container /bin/bash

EOF

		echo -e -n '\033[0m'
		
	else
	
		docker exec -it $@;

	fi

	return $?;
	}


#docker
#
#
docker-he() { docker-help $@; }
docker-help() {
echo -e -n '\033[0;33m'
echo ">dk me (docker- me)"
echo ">me vw docker"
echo -e -n '\033[0m'
echo
echo -e -n '\033[1;36m'
cat<<EOF
docker-!             !     
docker-!!            !!    
docker-build         bl    build a dockerfile
docker-container     ct    manipulate containers
docker-containers    cs    Show current containers (>*-processes)
docker-difference    df    differences of original image to running container
docker-help          he    this information...
docker-image         im    manipulate images
docker-inspect       in    inspect a container
docker-kill          kl    
docker-list          ls    List existing images and running processes
docker-last          la    Last processes run
docker-off           --    turn docker service off
docker-on            --    turn docker service on
docker-process       ps    ?containers
docker-reset         rs    reset
docker-run           ru    run | ri=interactive | rd=detached
docker-search        --    
docker-searchX       --    
docker-state         st    
docker-status        ss    
docker-volume        vl    
docker-xxx           xx    
EOF
echo -e -n '\033[0m'
}



#
#
#
docker-im() { docker-image $*; return $@; }
docker-image() { 
	docker image $*;
	return $@;
	}



#
#
#
docker-in() { docker-inspect $@; return $?; }
docker-inspect() { 
	docker inspect $@;
	return $?;
	}


#
#
#
docker-kl() { docker-kill $@; }
docker-kill() { 
	docker stop $@;
	return $?;
	}


#
#
#
docker-la() { docker-last; }
docker-last() { 
	docker ps -l $@;
	return $?;
	}


# list images/containers(hot|cold)
#
#
docker-ls() { docker-list; }
docker-list() {
	echo -e -n '\033[0;32m'
	echo [ IMAGES ]
	echo -e -n '\033[0m'
	echo ----------------------------------------
	docker image ls;

	echo
	echo -e -n '\033[0;33m'
	echo [ CONTAINERS/HOT ]
	echo -e -n '\033[0m'
	echo ----------------------------------------
	docker ps;

	echo
	echo -e -n '\033[0;34m'
	echo [ CONTAINERS/COLD ]
	echo -e -n '\033[0m'
	echo ----------------------------------------
	docker ps --filter "status=exited";

	return $?;
	}



# Show me-<this> from #scriptsX
# via aaa- to generalize aaa-/*- invoker
#
docker-me() {
	aaa-me dk;
	return $?;
	}



#
#
#
docker-off() { 
	service docker stop;
	return $?;
	}

#
#
#
docker-on() { 
	service docker start;
	return $?;
	}


#docker
#
#
docker-ps() { docker-process $@; return $?; }
docker-process() { 
	docker ps $@;
	return $?;
	}



# remove image
#
#
docker-rm() { docker-remove $@; return $?; }
docker-remove() { 
	echo -e -n '\033[0;33m'
	echo -e -n ">docker-kill ~ dk kl"
	echo -e -n '\033[0m'
	echo
	echo
	docker image rm $@;
	return $?;
	}




# reset ecosystem
#
#
docker-rs() { docker-reset $@; return $?; }
docker-reset() {
	docker system prune $@;
	return $?;
	}



# hard reset ecosystem
#
#
docker-rsx() { docker-resetX $@; return $?; }
docker-resetX() {
	echo -e -n '\033[0;33m';
	echo "Docker hard reset...";
	echo -e -n '\033[0m';
	echo;

	echo Stopping docker service...
	service docker stop;
	echo;
	sleep 1;
	
	echo Starting docker service...
	service docker start;
	echo;
	sleep 1;

	echo Ready...
	echo;
	
	# docker system prune $@;
	return $?;
	}



#
#
#
docker-ru() { docker-run $@; return $?; }
docker-rd() { docker-run -d $@; return $?; }
docker-ri() { docker-run -i $@; return $?; }
docker-run() {
	# docker run -i ubuntu /bin/bash
	# docker run -d -i ubuntu /bin/bash
	# docker run $@;
echo -e -n '\033[0;33m'
echo ">dk me (docker- me)"
echo ">me vw docker"
echo -e -n '\033[0m'
echo
echo -e -n '\033[1;36m'
cat<<EOF
docker run ~image

EOF
echo -e -n '\033[0m'
	return $?;
	}


#
#
#
docker-se() { docker-search $@; return $?; }
docker-search() {
	docker search $@;
	return $?;
	}


#
#
# ?x
# dtags () { local image="${1}"
# curl --silent \
#   "https://registry.hub.docker.com/v2/repositories/library/${image}/tags?page_size=1000" \
#   | jq -r ".results[].name" | sort --version-sort }
docker-searchX() { 
	curl --silent "https://registry.hub.docker.com/v2/repositories/library/${x}/tags?page_size=1024"
	}


#
#
# ***REFACTOR
docker-st() { docker-state $@; return $?; }
docker-state() { 
	service docker status;
	return $?;
	}



#
#
#
docker-ss() { docker-status $@; return $?; }
docker-status() { 
	docker info;
	return $?;
	}


#
#
#
docker-vl() { docker-volume $@; return $?; }
docker-volume() { 
	docker volume $@;
	return $?;
	}


#
#
#
docker-xx() { docker-xxx $@; return $?; }
docker-xxx() {
	aaa-xxx $0 xxx $*;
	return $?;
	}


