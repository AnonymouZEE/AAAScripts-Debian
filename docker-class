###############################################################
#
#  D O C K E resolved
#
#

echo AAA/Docker *sh/Library
echo AAA/ZEE/2023
echo


# PROPERTIES
# ATT*** '-' not permite in identifiers...
docker_container="";
docker_image="";

#
#
#
docker-!(){
	echo Scripts#
	echo ----------------------------------------
	ls -la $aaa_scripts/$1*
	echo
	echo Scripts#
	echo ----------------------------------------
	ls -la $aaa_scriptsX/$1*
	echo
	}



#docker
#
#
docker-bl() { docker build $@; }
docker-build() {
	docker build $@;
	}

#docker
#
#
docker-ct() { docker-container $@; }
docker-container() {
	echo 2DO***
	}


#docker
#
#
docker-hh() { docker-help $@; }
docker-help() {
echo -e -n '\033[1;36m'
cat<<EOF
>me-docker

docker-!          !
docker-!!         !!
docker-build      bl  build a dockerfile
docker-container  ct  manipulate containers
docker-image      im  manipulate images
docker-inspect    in  inspect a container
docker-kill       kl
docker-list       ls  List existing images and running processes
docker-last       la  Last processes run
docker-off        --  turn docker service off
docker-on         --  turn docker service on
docker-process    ps  ?containers
docker-reset      rs  reset
docker-run        --
docker-search     --
docker-searchX    --
docker-state      st
docker-status     --
docker-volume     vl
docker-xxx        xx
EOF
echo -e -n '\033[0;37m'
}


#
#
#
docker-im() { docker-image $*; }
docker-image() { 
	docker image $*;
	}



#
#
#
docker-in() { docker-inspect $@; }
docker-inspect() { 
	docker inspect $@;
	}


#
#
#
docker-kl() { docker-kill; }
docker-kill() { 
	docker stop $@;
	return $?;
	}


#
#
#
docker-la() { docker-last; }
docker-last() { 
	docker ps -l $@;
	return $?;
	}


#
#
#
docker-ls() { docker-list; }
docker-list() { 
	docker image ls;
	echo ----------------------------------------
	docker ps;
	return $?;
	}


# invoke external personal scripts me-docker-* (#scriptsX)
#
#
docker-me() {
	me-docker;
	return $?;
	}


#
#
#
docker-off() { 
	service docker stop;
	return $?;
	}

#
#
#
docker-on() { 
	service docker start;
	return $?;
	}


#docker
#
#
docker-ps() { docker-process $@; }
docker-process() { 
	docker ps $@;
	return $?;
	}



#
#
docker-rs() { docker-reset $@; }
docker-reset() {
	docker system prune $@;
	return $?;
	}

#
#
#
docker-run() { 
	docker run $@;
	return $?;
	}


#
#
#
docker-search() { 
	docker search $@;
	return $?;
	}


#
#
# ?x
# dtags () { local image="${1}"
# curl --silent \
#   "https://registry.hub.docker.com/v2/repositories/library/${image}/tags?page_size=1000" \
#   | jq -r ".results[].name" | sort --version-sort }
docker-searchX() { 
	curl --silent "https://registry.hub.docker.com/v2/repositories/library/${x}/tags?page_size=1024"
	}


#
#
# ***REFACTOR
docker-st() { docker-state }
docker-state() { 
	docker-status
	return $?;
	}

#
#
#
docker-status() { 
	service docker status;
	return $?;
	}


#
#
#
docker-vl() { docker-volume $@; }
docker-volume() { 
	docker volume $@;
	}


#
#
#
docker-xx() { docker-xxx $@; }
docker-xxx() {
	aaa-xxx $0 xxx $*;
	}

